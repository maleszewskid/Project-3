{"version":3,"sources":["../node_modules/sentiment/languages sync /^/.*/index$","utils/API.js","components/LoginHeader/index.js","components/LoginForm/LoginForm.js","pages/LoginPage.js","pages/SignUp.js","components/ResetPassword/index.js","pages/ResetpasswordPage.js","components/LandingHeader/index.js","components/LandingBody/index.js","components/Footer/index.js","pages/LandingPage.js","components/Header/Header.js","components/MedicationsDisplay/MedsDisplay.js","components/EntryTabs/index.js","pages/DataEntryPage.js","components/createPDF/index.js","components/EmailForm/index.js","pages/SubmitPage.js","components/Charts/BloodPressureChart.js","components/Charts/BloodSugarChart.js","components/Charts/HeartRateChart.js","components/Charts/SentimentChart.js","components/ViewTabs/ViewTabs.js","pages/ViewData.js","App.js","serviceWorker.js","index.js"],"names":["map","webpackContext","req","id","webpackContextResolve","__webpack_require__","o","e","Error","code","keys","Object","resolve","module","exports","userCreds","axios","post","get","patientInfo","username","data","emailAddress","console","log","LoginHeader","props","className","LoginForm","Container","Row","Col","Form","Group","controlId","Label","Control","onChange","name","type","placeholder","key","Check","label","Button","onClick","variant","error","to","window","location","pathname","Login","handleInputChange","event","target","value","setState","handleSubmit","preventDefault","userInfo","state","password","API","then","res","status","redirectTo","loggedIn","catch","err","render","Component","Signup","handleChange","handleFormSubmit","email","length","confirmPassword","usernameTaken","firstName","firstname","middleName","middlename","lastName","lastname","dateofBirth","dateofbirth","sex","userCreateFailure","this","Card","Title","onSubmit","inline","test","toString","block","Resetpassword","Reset","reset","LandingHeader","user","LandingBody","Header","Body","Text","Footer","MainFooter","href","Landing","MedsDisplay","useState","setData","setNewMeds","medArr","setMedArr","loading","setLoading","setError","makeMedObj","medications","doseage","medObj","i","push","useEffect","a","async","getData","cellEdit","mode","onStartEdit","row","column","rowIndex","columnIndex","beforeSaveCell","oldValue","newValue","afterSaveCell","remote","keyField","columns","dataField","text","cellEditFactory","onTableChange","rowId","result","newRow","dataObj","makeDataObj","EntryTabs","setKey","Tabs","activeKey","onSelect","k","Tab","eventKey","title","onBloodClick","bloodSuccess","bloodError","as","onMoodChange","rows","sentimentScore","ProgressBar","now","onMoodClick","moodSuccess","moodError","onMedsClick","medSuccess","medError","addDoseage","onGenClick","genSuccess","genError","DataEntry","handleBloodSubmit","heartRate","bloodSugar","systolicBloodPressure","diastolicBloodPressure","calculateSentiment","journalText","Sentiment","analyze","percentageScore","Math","round","comparative","journalEntrySentiment","handleMoodInputChange","journalEntry","handleMoodSubmit","handleMedsSubmit","medArray","doseArray","medication1","doseage1","medication2","doseage2","medication3","doseage3","medication4","doseage4","medication5","doseage5","handleGeneralSubmit","feet","inches","weight","ethnicity","disability","tobaccoUse","mrn","height","ViewPDF","moodSentiment","address","phoneNumber","height1","personalData","heart","diabetic","styles","StyleSheet","create","page","backgroundColor","section","color","textAlign","margin","Heading","styled","Author","Paragraph","Subtitle","fileName","style","fixed","Email","emailInput","setEmailInput","getEmailInput","sendEmailAddress","SubmitToDoctor","handleEmailSubmit","document","message","BloodPressureChart","download","BloodSugarChart","HeartRateChart","SentimentChart","makeNewObj","v","newObj","ViewTabs","bloodTimeStamp","moodTimeStamp","heartRateData","bloodSugarData","systolicBloodPressureData","diastolicBloodPressureData","journalEntrySentimentData","bloodPressureGraph","bloodSugarGraph","heartRateGraph","sentimentGraph","medList","sortedMoodTimeStamp","reverse","sortedJournalEntry","journalList","Accordion","defaultActiveKey","entries","elem","Toggle","slice","Collapse","Table","striped","bordered","hover","size","ListGroup","ListGroupItem","ViewData","App","exact","path","component","LoginPage","LandingPage","DataEntryPage","SignUp","ResetpasswordPage","SubmitPage","Boolean","hostname","match","ReactDOM","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.2fc2939b.chunk.js","sourcesContent":["var map = {\n\t\"./en/index\": 239\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 399;","import axios from 'axios';\r\n\r\nexport default {\r\n    // ------- USER LOGIN -------  \r\n    // synonymous to the findUser method in controller\r\n    // pass userCreds as an object\r\n    // userCreds passed via req.body to mongo via express\r\n    // endpoint = 'patientDB'\r\n    Login: function(userCreds) {\r\n        return axios.post(\"/api/authenticate/Login\", userCreds);\r\n    },\r\n    // Logout user\r\n    Logout: function() {\r\n        return axios.get(\"/api/authenticate/Logout\");\r\n    },\r\n    // synonymous to the createUser method in controller\r\n    // pass userCreds as an object\r\n    // userCreds passed via req.body to mongo via express\r\n    // endpoint = 'patientDB'\r\n    Signup: function(userCreds) {\r\n        return axios.post('/api/authenticate/Signup', userCreds);\r\n    },\r\n    // Create new patient in patientInfo upon signup:\r\n    createUser: function(patientInfo) {\r\n        return axios.post('/api/patient/createPatient', patientInfo);\r\n    },\r\n    // synonymous to the deleteUserCreds method in controller\r\n    DeleteUser: function(username) {\r\n        return axios.delete('/api/authenticate/DeleteUser/:' + username);\r\n    },\r\n    // ------- USER DATA -------\r\n    // This will grab all patient data and send it to the front end for graphing. \r\n    allPatientData : function(username) {\r\n        return axios.get('/api/patient/allData/' + username.username)\r\n    },\r\n    // Add patient data to DB:\r\n    submitBloodData: function(data) {\r\n        return axios.post('/api/patient/addBloodData', data)\r\n    },\r\n    submitMoodData: function(data) {\r\n        return axios.post('/api/patient/addMoodData', data)\r\n    },\r\n    submitMedData: function(data) {\r\n        return axios.post('/api/patient/addMedData', data)\r\n    },\r\n    updateMedData: function(data) {\r\n        return axios.post('/api/patient/updateMedData', data)\r\n    },\r\n    submitGenData: function(data) {\r\n        return axios.post('/api/patient/addGenData', data)\r\n    },\r\n    // update patient password here, Jack to test this function\r\n    updatePatientPassword: function(username) {\r\n        return axios.update('/UpdatePassword/:' + username)\r\n    },\r\n    sendEmail: function(emailAddress) {\r\n        console.log(emailAddress);\r\n        return axios.post('/api/send/email', emailAddress)\r\n    }\r\n\r\n}","import React from 'react';\r\nimport './LoginHeader.css';\r\n\r\nconst LoginHeader = props => {\r\n\r\n    return (\r\n        <nav className=\"navbar navbar-expand-lg navbar-light bg-light text-center\">\r\n            \r\n            <p className=\"p-2 m-0 headerTitle\"><i className=\"fa fa-heartbeat 2x\"></i>PatientFirst</p>\r\n            <div>\r\n                \r\n            </div>\r\n        </nav>\r\n    )\r\n}\r\n\r\nexport default LoginHeader;\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport Container from 'react-bootstrap/Container';\r\nimport Form from 'react-bootstrap/Form';\r\nimport Button from 'react-bootstrap/Button';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\nimport './LoginForm.css';\r\n\r\nconst LoginForm = props => {\r\n\r\n    return (\r\n        <Container className=\"loginForm card\">\r\n            <Row className=\"justify-content-md-center\">\r\n                <Col className='col-sm'>\r\n                    <Row>\r\n                        <Col className=\"col-12 text-center\">\r\n                            <div className=\"welcomeMsg\">Login</div>\r\n                        </Col>\r\n                    </Row>\r\n                    {/* User login form */}\r\n                    <Col className=\"col-md-auto\">\r\n                        <Form className=\"form-login\">\r\n                            <Form.Group controlId=\"formGroupEmail\">\r\n                                <Form.Label></Form.Label>\r\n                                <Form.Control onChange={props.onChange} name=\"username\" type=\"username\" placeholder=\"Username\" />\r\n                            </Form.Group>\r\n                            <Form.Group controlId=\"formGroupPassword\">\r\n                                <Form.Label></Form.Label>\r\n                                <Form.Control onChange={props.onChange} name=\"password\" type=\"password\" placeholder=\"Password\" />\r\n                            </Form.Group>\r\n                            <Row>\r\n                                <Col>\r\n                                    {/* Remember me checkbox */}\r\n                                    <div key={`default-checkbox`} className=\"mb-3 checkboxDiv\">\r\n                                        <Form.Check\r\n                                            type={`checkbox`}\r\n                                            id={`Remember-me`}\r\n                                            label={`Remember me`}\r\n                                        />\r\n                                    </div>\r\n                                </Col>\r\n                                <Col className='col-sm'>\r\n                                    <Button onClick={props.onClick} className=\"loginSubmitBtn\" type=\"submit\" variant=\"success\">Log in</Button>\r\n                                </Col>\r\n                            </Row>\r\n                        </Form>\r\n                    </Col>\r\n                    {(props.error) ? <Row>\r\n                        <Col className='loginError col-5 p-2 my-2 mx-auto text-center rounded'>\r\n                            Login failure. Please try again.\r\n                        </Col>\r\n                    </Row> : null}\r\n                    <br></br>\r\n\r\n                    <Col className=\"col-md-auto\">\r\n                        <hr>\r\n                        </hr>\r\n                    </Col>\r\n                    <br></br>\r\n                    <Row>\r\n                        <Col className=\"col-12 text-center\">\r\n                            <div className=\"hasAccount\">Don't have an account?</div>\r\n                        </Col>\r\n                    </Row>\r\n                    <Row>\r\n                        <Col className=\"col-md-auto createAccount\">\r\n                            <Link\r\n                                to=\"/Signup\"\r\n                                className={window.location.pathname === \"/Signup\"}\r\n                            >\r\n                                <Button className=\"createAccountBtn\" variant=\"info\">Sign up</Button>\r\n                            </Link>\r\n                        </Col>\r\n                    </Row>\r\n                    <br></br>\r\n                    <hr></hr>\r\n                    <br></br>\r\n\r\n                    <Row>\r\n                        <Col className=\"col-12 text-center\">\r\n                            <div>\r\n                                <Link\r\n                                    to=\"/Resetpassword\"\r\n                                    className={window.location.pathname === \"/Resetpassword\"}\r\n                                >\r\n                                    <div className=\"forgotPwd\">Forgot you password?</div>\r\n                                </Link>\r\n                            </div>\r\n                        </Col>\r\n                    </Row>\r\n                    <br></br>\r\n\r\n\r\n                </Col>\r\n            </Row>\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default LoginForm;\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import React, { Component } from 'react';\r\nimport { Link, Redirect } from 'react-router-dom';\r\nimport API from '../utils/API';\r\n\r\n// Custom Components\r\nimport LoginHeader from '../components/LoginHeader';\r\nimport LoginForm from '../components/LoginForm/LoginForm'\r\n\r\nclass Login extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            username: \"\",\r\n            redirectTo: null,\r\n            loggedIn: null\r\n        }\r\n    }\r\n\r\n    handleInputChange = event => {\r\n        // Getting the value and name of the input which triggered the change\r\n        const { name, value } = event.target;\r\n        // Updating the input’s state\r\n        this.setState({\r\n            [name]: value\r\n        });\r\n    };\r\n\r\n\r\n    // event handler for onclick of submit button in login form\r\n    handleSubmit = event => {\r\n        event.preventDefault();\r\n        let userInfo = {\r\n            username: this.state.username,\r\n            password: this.state.password,\r\n            error: false\r\n        }\r\n        API.Login(userInfo)\r\n            // here -> redirect the user to the landing page\r\n            .then(res => {\r\n                // Need to have this redirect to the main page:\r\n                if (res.status === 200) {\r\n                    // Set the redirect route:\r\n                    this.setState({\r\n                        redirectTo: '/Landing',\r\n                        loggedIn: true,\r\n                        username: res.data.username\r\n                    })\r\n                } else {\r\n                    this.setState({\r\n                        error: true\r\n                    })\r\n                }\r\n            })\r\n            .catch(err => this.setState({\r\n                error: true\r\n            })\r\n        )\r\n    }\r\n\r\n    render = () => {\r\n        if (this.state.redirectTo) {\r\n            return <Redirect to={{ pathname: this.state.redirectTo, state: {username: this.state.username} }} />\r\n        } else {\r\n            return (\r\n                <div>\r\n                    <Link\r\n                        to=\"/Login\"\r\n                        className={window.location.pathname === \"/Login\"}\r\n                        >\r\n                    </Link>\r\n                    <LoginHeader />\r\n                    <LoginForm\r\n                        onChange={this.handleInputChange}\r\n                        onClick={this.handleSubmit}\r\n                        error={this.state.error}\r\n                    />\r\n                </div>\r\n            )\r\n        }\r\n    }\r\n}\r\n\r\nexport default Login;\r\n","import React, { Component } from \"react\";\r\nimport { Redirect } from 'react-router-dom';\r\nimport Form from 'react-bootstrap/Form';\r\nimport Container from 'react-bootstrap/Container';\r\nimport Button from 'react-bootstrap/Button';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\nimport Card from 'react-bootstrap/Card'\r\nimport LoginHeader from '../components/LoginHeader';\r\nimport '../../src/assets/css/Signup.css';\r\n// Import the API:\r\nimport API from '../utils/API.js';\r\n\r\nexport default class Signup extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      username: \"\",\r\n      email: \"\",\r\n      password: \"\",\r\n      confirmPassword: \"\",\r\n      firstname: \"\",\r\n      middlename: \"\",\r\n      lastname: \"\",\r\n      dateofbirth: '',\r\n      sex: '',\r\n      redirectTo: '',\r\n      error: false,\r\n      usernameTaken: false,\r\n      userCreateFailure: false\r\n    };\r\n  }\r\n\r\n  handleChange = event => {\r\n    this.setState({\r\n      [event.target.name]: event.target.value,\r\n      error: false,\r\n      usernameTaken: false\r\n    });\r\n  }\r\n\r\n  handleFormSubmit = event => {\r\n    event.preventDefault();\r\n    if ((this.state.email.length > 0 && this.state.password.length > 0) && (this.state.password === this.state.confirmPassword)) {\r\n      API.Signup({\r\n        username: this.state.username,\r\n        password: this.state.password,\r\n      })\r\n        .then(res => {\r\n          if (res.data.error) {\r\n            this.setState({\r\n              usernameTaken: true\r\n            })\r\n          } else {\r\n            API.createUser({\r\n              email: this.state.email,\r\n              username: this.state.username,\r\n              firstName: this.state.firstname,\r\n              middleName: this.state.middlename,\r\n              lastName: this.state.lastname,\r\n              dateofBirth: this.state.dateofbirth,\r\n              sex: this.state.sex\r\n            })\r\n              .then(res => {\r\n                if (res.data.error) {\r\n                  this.setState({\r\n                    userCreateFailure: true\r\n                  })\r\n                } else {\r\n                  this.setState({\r\n                    redirectTo: '/Landing',\r\n                    username: this.state.username\r\n                  })\r\n                }\r\n              })\r\n              .catch(err => {\r\n                if (err) {\r\n                  this.setState({\r\n                    error: true\r\n                  })\r\n                }\r\n              })\r\n          }\r\n        })\r\n        .catch(err => {\r\n          if (err) {\r\n            this.setState({\r\n              error: true\r\n            })\r\n          }\r\n        })\r\n    } else {\r\n      this.setState({\r\n        error: true\r\n      })\r\n    }\r\n  }\r\n\r\n  render() {\r\n    if (this.state.redirectTo) {\r\n      return <Redirect to={{ pathname: this.state.redirectTo, state: { username: this.state.username } }} />\r\n    } else {\r\n      return (\r\n        <div>\r\n          <LoginHeader />\r\n          <br></br>\r\n          <br></br>\r\n          <br></br>\r\n          <br></br>\r\n          <Container className=\"signup-container card\">\r\n            <Card.Title className='text-center'>Enter Your Information</Card.Title>\r\n            <hr></hr>\r\n            <br></br>\r\n            <div className=\"Login\">\r\n              <Form onSubmit={this.handleSubmit}>\r\n                <div className='row'>\r\n\r\n                  <div className=\"col\">\r\n                    <Form.Group >\r\n                      <Form.Control\r\n                        name='username'\r\n                        type=\"UserName\"\r\n                        value={this.state.username}\r\n                        onChange={this.handleChange}\r\n                        placeholder=\"User Name\"\r\n                      />\r\n                    </Form.Group>\r\n\r\n                    <Form.Group>\r\n                      <Form.Control\r\n                        name='firstname'\r\n                        type=\"Firstname\"\r\n                        value={this.state.firstname}\r\n                        onChange={this.handleChange}\r\n                        placeholder=\"First Name\"\r\n                      />\r\n                    </Form.Group>\r\n                    <Form.Group>\r\n                      <Form.Control\r\n                        name='middlename'\r\n                        type=\"MiddleInitial\"\r\n                        value={this.state.middlename}\r\n                        onChange={this.handleChange}\r\n                        placeholder=\"Middle Initial\"\r\n                      />\r\n                    </Form.Group>\r\n                    <Form.Group>\r\n                      <Form.Control\r\n                        name='lastname'\r\n                        type=\"lastname\"\r\n                        value={this.state.lastname}\r\n                        onChange={this.handleChange}\r\n                        placeholder=\"Last Name\"\r\n                      />\r\n                    </Form.Group>\r\n                  </div>\r\n                  <div className=\"col\">\r\n                    <Form.Group>\r\n                      <Form.Control\r\n                        name='email'\r\n                        type=\"email\"\r\n                        value={this.state.email}\r\n                        onChange={this.handleChange}\r\n                        placeholder=\"Email\"\r\n                      />\r\n                    </Form.Group>\r\n                    <Form.Group>\r\n                      <Form.Control\r\n                        value={this.state.password}\r\n                        onChange={this.handleChange}\r\n                        name='password'\r\n                        type=\"password\"\r\n                        placeholder=\"Password\"\r\n                        className=\"form-control validate\"\r\n                        id=\"password\"\r\n                      />\r\n                    </Form.Group>\r\n                    <Form.Group>\r\n                      <Form.Control\r\n                        placeholder=\"Confirm Password\"\r\n                        type=\"password\"\r\n                        name='confirmPassword'\r\n                        value={this.state.confirmPassword}\r\n                        onChange={this.handleChange}\r\n                        className=\"form-control validate\"\r\n                        id=\"confirmPassword\"\r\n                      />\r\n                    </Form.Group>\r\n\r\n                    <Form.Group>\r\n                      <Form.Control\r\n                        name='dateofbirth'\r\n                        value={this.state.dateofbirth}\r\n                        onChange={this.handleChange}\r\n                        type=\"Date of birth\"\r\n                        placeholder=\"Date of birth as MM/DD/YYY\"\r\n                      />\r\n                    </Form.Group>\r\n                  </div>\r\n                </div>\r\n                <div className='row'>\r\n                  <div className='col'></div>\r\n                  <div className='col'>\r\n                    <Form>\r\n                      {['radio'].map(type => (\r\n                        <div key={`inline-${type}`} className=\"mb-3\">\r\n                          <Form.Check inline label=\"Male\" type={type} name='sex' value='male' id={`inline-${type}-1`} onChange={this.handleChange} />\r\n                          <Form.Check inline label=\"Female\" type={type} name='sex' value='female' id={`inline-${type}-2`} onChange={this.handleChange}/>\r\n                        </div>\r\n                      ))}\r\n                    </Form>\r\n                  </div>\r\n\r\n                  <div className='col'></div>\r\n                </div>\r\n\r\n                <hr></hr>\r\n                <br></br>\r\n\r\n                <Row>\r\n                  <Col className=\"col-12 text-center\">\r\n                  </Col>\r\n                </Row>\r\n                {(this.state.usernameTaken) ? <Row>\r\n                  <Col className='error col-5 p-2 my-2 mx-auto text-center rounded'>\r\n                    The username {this.state.username} is unavailable.\r\n                        </Col>\r\n                </Row> : null}\r\n                {(this.state.userCreateFailure) ? <Row>\r\n                  <Col className='error col-5 p-2 my-2 mx-auto text-center rounded'>\r\n                    Could not create user. Contact Jack @ jack.jackryan@gmail.com\r\n                        </Col>\r\n                </Row> : null}\r\n                {(this.state.error) ? <Row>\r\n                  <Col className='error col-5 p-2 my-2 mx-auto text-center rounded'>\r\n                    Whoops! Something went wrong. Contact Jack @ jack.jackryan@gmail.com\r\n                        </Col>\r\n                </Row> : null}\r\n                {((this.state.password.length > 6) && (/\\d/.test(this.state.password.toString()) && (this.state.confirmPassword === this.state.password))) ? <Row>\r\n                  <Col className='good col-5 p-2 my-2 mx-auto text-center rounded'>\r\n                    Your password is strong.\r\n              </Col>\r\n                </Row> : null}\r\n                {((this.state.password.length < 6 || !/\\d/.test(this.state.password.toString()))) ? <Row>\r\n                  <Col className='error col-5 p-2 my-2 mx-auto text-center rounded'>\r\n                    Your password is not strong enough.\r\n              </Col>\r\n                </Row> : null}\r\n                {((this.state.confirmPassword.length > 0) && (this.state.password !== this.state.confirmPassword)) ? <Row>\r\n                  <Col className='error col-5 p-2 my-2 mx-auto text-center rounded'>\r\n                    Your passwords don't match!\r\n  \r\n              </Col>\r\n                </Row> : null}\r\n                <Button\r\n                  block\r\n                  type=\"submit\"\r\n                  className=\"btn btn-success signup-button\"\r\n                  onClick={this.handleFormSubmit}\r\n                >\r\n                  Sign Up\r\n                </Button>\r\n                <br></br>\r\n\r\n              </Form>\r\n            </div>\r\n\r\n          </Container>\r\n        </div >\r\n      );\r\n    }\r\n  }\r\n}\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport Container from 'react-bootstrap/Container';\r\nimport Form from 'react-bootstrap/Form';\r\nimport Button from 'react-bootstrap/Button';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\nimport LoginHeader from '../LoginHeader'\r\nimport './ResetPassword.css';\r\n\r\nconst Resetpassword = props => {\r\n\r\n    return (\r\n        <div>\r\n            <LoginHeader />\r\n            <Container className=\"resetForm\">\r\n                <Row className=\"justify-content-md-center\">\r\n                    <Col>\r\n                        <Row>\r\n                            <Col className=\"col-12 text-center\">\r\n                                <div className=\"resetMsg\">Password Reset</div>\r\n                            </Col>\r\n                        </Row>\r\n                        <Row>\r\n                            <Col className=\"col-12 text-center\">\r\n                                <div className=\"resetSubMsg\">Reset your PatientFirst password below</div>\r\n                            </Col>\r\n                        </Row>\r\n                        {/* User login form */}\r\n                        <Col className=\"col-md-auto\">\r\n                            <Form className=\"reset-form-login\">\r\n                                <Form.Group controlId=\"formGroupEmail\">\r\n                                    <Form.Label></Form.Label>\r\n                                    <Form.Control onChange={props.onChange} name=\"oldpassword\" type=\"password\" placeholder=\"Old password\" />\r\n                                </Form.Group>\r\n                                <Form.Group controlId=\"formGroupPassword\">\r\n                                    <Form.Label></Form.Label>\r\n                                    <Form.Control onChange={props.onChange} name=\"newpassword\" type=\"password\" placeholder=\"New password\" />\r\n                                </Form.Group>\r\n                                <Row>\r\n                                    <Col>\r\n                                    <Link\r\n                                        to=\"/Landing\"\r\n                                        className={window.location.pathname === \"/Landing\"}\r\n                                        >\r\n                                        <Button onClick={props.onClick} className=\"ResetBtn\" variant=\"success\">Reset Password</Button>\r\n                                        </Link>\r\n                                    </Col>\r\n                                </Row>\r\n                            </Form>\r\n                        </Col>\r\n                        {(props.error) ? <Row>\r\n                            <Col className='resetError col-5 p-2 my-2 mx-auto text-center rounded'>\r\n                                Password was not reset. Please try again.\r\n                        </Col>\r\n                        </Row> : null}\r\n                        <br></br>\r\n                    </Col>\r\n                </Row>\r\n            </Container>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Resetpassword;\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import React, { Component } from 'react';\r\nimport { Link, Redirect } from 'react-router-dom';\r\n// import API from '../utils/API';\r\n\r\n// Custom Components\r\nimport ResetPassword from '../components/ResetPassword'\r\n\r\n\r\nclass Reset extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            username: \"\",\r\n            redirectTo: null,\r\n            reset: false\r\n        }\r\n    }\r\n\r\n\r\n\r\n    handleInputChange = event => {\r\n        // Getting the value and name of the input which triggered the change\r\n        const { name, value } = event.target;\r\n        // Updating the input’s state\r\n        this.setState({\r\n            [name]: value\r\n        });\r\n    };\r\n\r\n    \r\n    // Add handle submit function here\r\n    // On submit we should call an API function to update the userCreds database\r\n    // with the users updated password\r\n    // ResetPassword component will then re-route to /Landing page\r\n\r\n    \r\n    render = () => {\r\n        if (this.state.redirectTo) {\r\n            return <Redirect to={{ pathname: this.state.redirectTo, state: {username: this.state.username} }} />\r\n        } else {\r\n            return (\r\n                <div>\r\n                    <Link\r\n                        to=\"/Resetpassword\"\r\n                        className={window.location.pathname === \"/Resetpassword\"}\r\n                        >\r\n                    </Link>\r\n                    <ResetPassword\r\n                        onChange={this.handleInputChange}\r\n                        onClick={this.handleSubmit}\r\n                        error={this.state.error}\r\n                    />\r\n                </div>\r\n            )\r\n        }\r\n    }\r\n}\r\n\r\nexport default Reset;","import React from 'react';\r\nimport './LandingHeader.css';\r\n\r\nconst LandingHeader = props => {\r\n    console.log(props);\r\n    return (\r\n        <nav className=\"navbar navbar-expand-lg navbar-light bg-light text-center fixed-top\">\r\n\r\n            <p className=\"p-2 m-0 headerTitle\"><i className=\"fa fa-heartbeat 2x\"></i>PatientFirst</p>\r\n            <div className=\"p-2 m-0 headerUsername\">{props.user.username}</div>\r\n\r\n            {/* <ul className='navbar-nav ml-auto'>\r\n                <li className='navbar-nav ml-auto'><a id='logout'>Logout</a></li>\r\n            </ul> */}\r\n        </nav>\r\n    )\r\n}\r\n\r\nexport default LandingHeader;","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport Container from 'react-bootstrap/Container';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\nimport Card from 'react-bootstrap/Card';\r\nimport Button from 'react-bootstrap/Button';\r\nimport './LandingBody.css';\r\n\r\nconst LandingBody = props => {\r\n    return (\r\n        <Container className=\"landingContainer\">\r\n            <Row className=\"justify-content-md-center\">\r\n                <Col>\r\n                    <Row>\r\n                        <Col className=\"col-12 text-center patientCard\">\r\n                            <div className=\"landingMsg\">PatientFirst (Pf) - a one of a kind health tracking service\r\n                            </div>\r\n                        </Col>\r\n                    </Row>\r\n                    <Row>\r\n                        \r\n                    </Row>\r\n                </Col>\r\n            </Row>\r\n\r\n            <Row>\r\n                <Col className=\"col-12 text-center card-container\">\r\n                    <Card className=\"text-center card-landing\">\r\n                        <Card.Header>Patient Portal</Card.Header>\r\n                        <Card.Body>\r\n                            <Card.Title>Powerful yet simplistic</Card.Title>\r\n                            <Card.Text>\r\n                                Fill out a form to be included in your next Doctor's visit\r\n                        </Card.Text>\r\n                        <Link to={{ pathname: \"/DataEntry\",\r\n                                    state: { username: props.user.username}\r\n                            }} >\r\n                            <Button className=\"pfPortalBtn\" variant=\"primary\">Begin</Button>\r\n                        </Link>\r\n                        </Card.Body>\r\n                        <Card.Footer className=\"text-muted\"></Card.Footer>\r\n                    </Card>\r\n                </Col>\r\n            </Row>\r\n\r\n            <Row>\r\n                <Col className=\"col-12 text-center card-container\">\r\n                    <Card className=\"text-center card-landing\">\r\n                        <Card.Header>Patient View</Card.Header>\r\n                        <Card.Body>\r\n                            <Card.Title>See your health history</Card.Title>\r\n                            <Card.Text>\r\n                                Charts and graphs supporting your overall health\r\n                        </Card.Text>\r\n                        <Link to={{ pathname: \"/viewData\",\r\n                                    state: { username: props.user.username}\r\n                            }} >\r\n                            <Button className=\"pfViewBtn\" variant=\"primary\">View Data</Button>\r\n                        </Link>\r\n                        </Card.Body>\r\n                        <Card.Footer className=\"text-muted\"></Card.Footer>\r\n                    </Card>\r\n                </Col>\r\n            </Row>\r\n\r\n            <Row>\r\n                <Col className=\"col-12 text-center card-container\">\r\n                    <Card className=\"text-center card-landing\">\r\n                        <Card.Header>Submit</Card.Header>\r\n                        <Card.Body>\r\n                            <Card.Title>Sends your information to your Health Provider</Card.Title>\r\n                            <Card.Text>\r\n                                All your data is secure and private\r\n                        </Card.Text>\r\n                        <Link to={{ pathname: \"/submit\",\r\n                                    state: { username: props.user.username}\r\n                            }} >\r\n                            <Button className=\"pfSendBtn\" variant=\"success\">Send to Provider</Button>\r\n                        </Link>\r\n                        </Card.Body>\r\n                        <Card.Footer className=\"text-muted\"></Card.Footer>\r\n                    </Card>\r\n                </Col>\r\n            </Row>\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default LandingBody;\r\n","import React from 'react';\r\nimport Container from 'react-bootstrap/Container';\r\nimport './MainFooter.css';\r\nimport FontAwesome from 'react-fontawesome'\r\nconst MainFooter = (props) => {\r\n    return (\r\n        <footer className=\"footer-main\">\r\n            <Container>\r\n\r\n                <div className=\"footer-text text-center py-3\">\r\n\r\n                    <a href=\"https://github.com/maleszewskid/Project-3\"><FontAwesome className=\"fa fa-github\"/>View Source</a>\r\n\r\n                </div>\r\n            </Container>\r\n        </footer>\r\n    )\r\n}\r\n\r\nexport default MainFooter;\r\n","import React, { Component } from 'react';\t\r\nimport LandingHeader from '../components/LandingHeader';\t\r\nimport LandingBody from '../components/LandingBody';\t\r\nimport Footer from '../components/Footer';\r\n\r\nclass Landing extends Component {\t\r\n    constructor(props) {\t\r\n        super(props);\t\r\n        this.state = {\t\r\n            redirectTo: '',\t\r\n            username: ''\t\r\n        }\t\r\n    }\t\r\n\r\n    render = () => {\t\r\n        const username = this.props.location.state;\t\r\n        return (\t\r\n            <div>\t\r\n                <LandingHeader user={username} />\t\r\n                <LandingBody user={username} />\t\r\n                <Footer />\r\n            </div>\t\r\n        )\t\r\n    }\t\r\n}\t\r\n\r\nexport default Landing;","import React from 'react';\r\nimport {\r\n    Link\r\n} from \"react-router-dom\";\r\nimport './Header.css';\r\nimport '../../App.css'\r\nimport FontAwesome from 'react-fontawesome'\r\nimport API from '../../utils/API';\r\n\r\nconst Header = (props) => {\r\n\r\n    const handleClick = event => {\r\n        API.Logout().then(() => {\r\n            \r\n        });\r\n    }\r\n\r\n    const { username } = props.user;\r\n    return (\r\n        <nav className=\"navbar navbar-expand-lg navbar-light bg-light fixed-top\">\r\n\r\n            <Link to={{ pathname: \"/Landing\", state: { username } }}>\r\n                <p className=\"p-2 m-0 headerTitle\"><i className=\"fa fa-heartbeat 2x\"></i>PatientFirst</p>\r\n            </Link>\r\n            <div className=\"p-2 m-0 headerUsernameHead\">{props.user.username}</div>\r\n            <div className=\"dropdown dropleft\">\r\n                <button className=\"dropbtn\">\r\n                <FontAwesome className='fas fa-bars' />\r\n                </button>\r\n                <div className=\"dropdown-content\">\r\n                    <Link className=\"nav-link dropdown-item\" to={{ pathname: \"/DataEntry\", state: { username } }}>Enter</Link>\r\n                    <Link className=\"nav-link dropdown-item\" to={{ pathname: \"/viewData\", state: { username } }}>View</Link>\r\n                    <Link className=\"nav-link dropdown-item\" to={{ pathname: \"/submit\", state: { username } }}>Submit</Link>\r\n                    {/* Here we need to send a request to logout user from DB */}\r\n                    <Link className=\"nav-link dropdown-item ml-auto\" onClick={() => handleClick()} to={{ pathname: \"/\", state: { username: \"\" } }}>Logout</Link>\r\n                </div>\r\n            </div>\r\n        </nav>\r\n    )\r\n}\r\n\r\nexport default Header;","import React, { useState, useEffect } from 'react';\r\nimport API from '../../utils/API';\r\nimport BootstrapTable from 'react-bootstrap-table-next';\r\nimport cellEditFactory from 'react-bootstrap-table2-editor';\r\n\r\nconst MedsDisplay = props => {\r\n    const [data, setData] = useState(null);\r\n    const [newMeds, setNewMeds] = useState(null);\r\n    const [medArr, setMedArr] = useState(null);\r\n    const [loading, setLoading] = useState(true);\r\n    const [error, setError] = useState('');\r\n\r\n    async function getData(username) {\r\n        API.allPatientData({ username })\r\n            .then(res => {\r\n                setData(res.data);\r\n                setLoading(false);\r\n                setError(false);\r\n                makeMedObj(data.medications, data.doseage);\r\n            })\r\n            .catch(error => {\r\n                setData('');\r\n                setLoading(false);\r\n                setError(error);\r\n            });\r\n    }\r\n\r\n    // const sendData = (data) => {\r\n    //     API.updateMedData({ data })\r\n    //         .then(res => console.log(res.data))\r\n    // }\r\n\r\n    const makeDataObj = (username, medications) => {\r\n        let dataObj = {};\r\n        let key = '';\r\n        let value = '';\r\n        for (let i = 0; i < medications.length; i++ ) {\r\n            key = medications[i].medications;\r\n            value = medications[i].doseage;\r\n            dataObj[key] = value;\r\n        }\r\n        dataObj.username = username;\r\n        //sendData(dataObj);\r\n    }\r\n\r\n    const makeMedObj = (medications, doseage) => {\r\n        let medArr = [];\r\n        let med = '';\r\n        let dose = '';\r\n        let medObj = {};\r\n        for (let i = 0; i < medications.length; i++) {\r\n            med = medications[i]\r\n            dose = doseage[i]\r\n            medObj = {\r\n                'id': i,\r\n                'medications': med,\r\n                'doseage': dose\r\n            };\r\n            medArr.push(medObj);\r\n        }\r\n        setMedArr(medArr);\r\n    }\r\n\r\n    const columns = [{\r\n        dataField: 'id',\r\n        text: 'ID'\r\n    }, {\r\n        dataField: 'medications',\r\n        text: 'Medications'\r\n    }, {\r\n        dataField: 'doseage',\r\n        text: 'Doseage'\r\n    }];\r\n\r\n    useEffect(() => {\r\n        const { username } = props.username;\r\n        getData(username);\r\n    }, [loading]);\r\n\r\n    const cellEdit = {\r\n        mode: 'click',\r\n        onStartEdit: (row, column, rowIndex, columnIndex) => { console.log(\"On Start\" + row, column, rowIndex, columnIndex); },\r\n        beforeSaveCell: (oldValue, newValue, row, column) => { console.log(\"Before Save\" + oldValue, newValue, row, column); },\r\n        afterSaveCell: (oldValue, newValue, row, column) => { console.log(oldValue, newValue, row, column); },\r\n      };\r\n\r\n     const handleTableChange = (type, { data, cellEdit: { rowId, dataField, newValue } }) => {\r\n        if (newValue === '') {\r\n            setNewMeds(data);\r\n            setError(\"Please enter a value.\") \r\n            } else {\r\n                const result = data.map((row) => {\r\n                    if (row.id === rowId) {\r\n                      const newRow = { ...row };\r\n                      newRow[dataField] = newValue;\r\n                      return newRow;\r\n                    }\r\n                    console.log(row)\r\n                    return row;\r\n                });\r\n                setMedArr(result);\r\n                makeDataObj(props.username, medArr);\r\n            }\r\n      }\r\n\r\n    if (medArr) {\r\n        return (\r\n            <>\r\n                <div>Current Medications</div>\r\n                <BootstrapTable\r\n                    remote={ { cellEdit: true } }\r\n                    keyField=\"id\"\r\n                    data={medArr}\r\n                    columns={columns}\r\n                    cellEdit={cellEditFactory(cellEdit)}\r\n                    onTableChange={ handleTableChange }\r\n                />\r\n            </>\r\n        );\r\n    } else if (!medArr){\r\n        return (\r\n            <>\r\n                <div>Error returning your data.</div>\r\n            </>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default MedsDisplay;","import React, { useState } from 'react';\r\nimport Container from 'react-bootstrap/Container';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\nimport Tabs from 'react-bootstrap/Tabs';\r\nimport Tab from 'react-bootstrap/Tab';\r\nimport Card from 'react-bootstrap/Card';\r\nimport Form from 'react-bootstrap/Form';\r\nimport Button from 'react-bootstrap/Button';\r\nimport ProgressBar from 'react-bootstrap/ProgressBar';\r\nimport MedsDisplay from '../../components/MedicationsDisplay/MedsDisplay';\r\nimport './EntryTabs.css';\r\n\r\n\r\nconst EntryTabs = props => {\r\n    const [key, setKey] = useState('home');\r\n\r\n    return (\r\n        <Container className=\"Main-Tab-Container\">\r\n            <Row>\r\n                <Col className=\"tab-content\">\r\n                    <Tabs className=\"text-center\" id=\"controlled-tab-example\" activeKey={key} onSelect={k => setKey(k)}>\r\n                        <Tab className=\"tab-1-home\" eventKey=\"home\" title=\"Home\">\r\n                            <Row>\r\n                                <Col className=\"col-12 text-center card-container-entry\">\r\n                                    <Card className=\"text-center card-entry display-block\">\r\n                                        <Card.Body>\r\n                                            <Row>\r\n                                                <Col>\r\n                                                    <p>\r\n                                                        Welcome to the PatientFirst data entry page.\r\n                                                    </p>\r\n                                                    <br></br>\r\n                                                    <p>\r\n                                                        Please click on each of the tabs on this page to access the different data entry forms.\r\n                                                    </p>\r\n                                                    <br></br>\r\n                                                    <p>\r\n                                                        Click submit after you have entered your data to store it on our server.\r\n                                                    </p>\r\n                                                    <br></br>\r\n                                                    <p>\r\n                                                        Thank you\r\n                                                    </p>\r\n                                                </Col>\r\n                                            </Row>\r\n                                        </Card.Body>\r\n                                        <Card.Footer className=\"entry-footer\"></Card.Footer>\r\n                                    </Card>\r\n                                </Col>\r\n                            </Row>\r\n                        </Tab>\r\n                        <Tab eventKey=\"blood\" title=\"Blood\">\r\n\r\n                            <Row>\r\n                                <Col className=\"col-12 text-center card-container-entry\">\r\n                                    <Card className=\"text-center card-entry display-block\">\r\n                                        <Card.Header className=\"entry-header\">Heart Rate | Blood Sugar | Blood Pressure | Pulse</Card.Header>\r\n                                        <Card.Body>\r\n                                            <Form>\r\n                                                <Form.Group controlId=\"heartrate\">\r\n                                                    <Form.Control\r\n                                                        name=\"heartRate\"\r\n                                                        onChange={props.onChange}\r\n                                                        placeholder=\"Heart Rate (bpm)\"\r\n                                                    />\r\n                                                </Form.Group>\r\n                                                <Form.Group controlId=\"bloodsugar\">\r\n                                                    <Form.Control\r\n                                                        name=\"bloodSugar\"\r\n                                                        onChange={props.onChange}\r\n                                                        placeholder=\"Blood Sugar (mg/dL)\"\r\n                                                    />\r\n                                                </Form.Group>\r\n                                                <Form.Group controlId=\"Systolic\">\r\n                                                    <Form.Control\r\n                                                        name=\"systolicBloodPressure\"\r\n                                                        onChange={props.onChange}\r\n                                                        placeholder=\"Systolic (mm Hg)\"\r\n                                                    />\r\n                                                </Form.Group>\r\n                                                <Form.Group controlId=\"Diastolic\">\r\n                                                    <Form.Control\r\n                                                        name=\"diastolicBloodPressure\"\r\n                                                        onChange={props.onChange}\r\n                                                        placeholder=\"Diastolic (mm Hg)\"\r\n                                                    />\r\n                                                </Form.Group>\r\n                                            </Form>\r\n                                            <Button onClick={props.onBloodClick} className=\"blood-submit\" variant=\"primary\">Submit</Button>\r\n                                            {(props.bloodSuccess) ? <div className='dataEntrySuccess col-5 p-2 my-2 mx-auto text-center rounded'>Data recorded!</div> : null}\r\n                                            {(props.bloodError) ? <div className='dataEntryError col-5 p-2 my-2 mx-auto text-center rounded'>There was an issue submitting your data. Please try again later.</div> : null}\r\n                                        </Card.Body>\r\n                                        <Card.Footer className=\"entry-footer\"></Card.Footer>\r\n                                    </Card>\r\n                                </Col>\r\n                            </Row>\r\n\r\n\r\n                        </Tab>\r\n                        <Tab eventKey=\"mood\" title=\"Mood\">\r\n                            <Row>\r\n                                <Col className=\"col-12 text-center card-container-entry\">\r\n                                    <Card className=\"text-center card-entry display-block\">\r\n                                        <Card.Header className=\"entry-header\">Mood Journal</Card.Header>\r\n                                        <Card.Body>\r\n\r\n                                            <Form.Group controlId=\"exampleForm.ControlTextarea1\">\r\n                                                <Form.Control as=\"textarea\" name=\"journalEntry\" onChange={props.onMoodChange} rows=\"6\" placeholder=\"Start typing here...\" />\r\n                                            </Form.Group>\r\n\r\n                                            {(props.sentimentScore < 50) ? <ProgressBar now={props.sentimentScore} variant=\"danger\" /> :\r\n                                                (props.sentimentScore > 50) ? <ProgressBar now={props.sentimentScore} variant=\"success\" />\r\n                                            : <ProgressBar now={50} variant=\"success\"/>}\r\n                                            <Row>\r\n                                            <Col className=\"col-4 d-flex justify-content-start\">\r\n                                                <div className=\"percent-score\">0</div>\r\n                                            </Col>\r\n                                            <Col className=\"col-4 d-flex justify-content-center\">\r\n                                                <div className=\"percent-score\">50 (Neutral)</div>\r\n                                            </Col>\r\n                                            <Col className=\"col-4 d-flex justify-content-end\">\r\n                                                <div className=\"percent-score\">100</div>\r\n                                            </Col>\r\n                                            </Row>\r\n                                            <br></br>\r\n                                            <Button onClick={props.onMoodClick} className=\"mood-submit\" variant=\"primary\">Save Entry</Button>\r\n                                            {(props.moodSuccess) ? <div className='dataEntrySuccess col-5 p-2 my-2 mx-auto text-center rounded'>Data recorded!</div> : null}\r\n                                            {(props.moodError) ? <div className='dataEntryError col-5 p-2 my-2 mx-auto text-center rounded'>There was an issue submitting your data. Please try again later.</div> : null}\r\n                                        </Card.Body>\r\n                                        <Card.Footer className=\"entry-footer\"></Card.Footer>\r\n                                    </Card>\r\n                                </Col>\r\n                            </Row>\r\n                        </Tab>\r\n                        <Tab eventKey=\"medications\" title=\"Medications\">\r\n                            <Row>\r\n                                <Col className=\"col-12 text-center card-container-entry\">\r\n                                    <Card className=\"text-center card-entry display-block\">\r\n                                        <Card.Header className=\"entry-header\">Medications | Dosage</Card.Header>\r\n                                        <Card.Body>\r\n                                            <Form className=\"my-3\">\r\n                                                <Form.Row>\r\n                                                    <Col className=\"col-8\">\r\n                                                        <Form.Control name=\"medication1\" onChange={props.onChange} placeholder=\"Medication\" />\r\n                                                    </Col>\r\n                                                    <Col className=\"col-4\">\r\n                                                        <Form.Control name=\"doseage1\" onChange={props.onChange} placeholder=\"Dosage (mg)\" />\r\n                                                    </Col>\r\n                                                </Form.Row>\r\n                                            </Form>\r\n                                            <Form className=\"my-3\">\r\n                                                <Form.Row>\r\n                                                    <Col className=\"col-8\">\r\n                                                        <Form.Control name=\"medication2\" onChange={props.onChange} placeholder=\"Medication\" />\r\n                                                    </Col>\r\n                                                    <Col className=\"col-4\">\r\n                                                        <Form.Control name=\"doseage2\" onChange={props.onChange} placeholder=\"Dosage (mg)\" />\r\n                                                    </Col>\r\n                                                </Form.Row>\r\n                                            </Form>\r\n                                            <Form className=\"my-3\">\r\n                                                <Form.Row>\r\n                                                    <Col className=\"col-8\">\r\n                                                        <Form.Control name=\"medication3\" onChange={props.onChange} placeholder=\"Medication\" />\r\n                                                    </Col>\r\n                                                    <Col className=\"col-4\">\r\n                                                        <Form.Control name=\"doseage3\" onChange={props.onChange} placeholder=\"Dosage (mg)\" />\r\n                                                    </Col>\r\n                                                </Form.Row>\r\n                                            </Form>\r\n                                            <Form className=\"my-3\">\r\n                                                <Form.Row>\r\n                                                    <Col className=\"col-8\">\r\n                                                        <Form.Control name=\"medication4\" onChange={props.onChange} placeholder=\"Medication\" />\r\n                                                    </Col>\r\n                                                    <Col className=\"col-4\">\r\n                                                        <Form.Control name=\"doseage4\" onChange={props.onChange} placeholder=\"Dosage (mg)\" />\r\n                                                    </Col>\r\n                                                </Form.Row>\r\n                                            </Form>\r\n                                            <Form className=\"my-3\">\r\n                                                <Form.Row>\r\n                                                    <Col className=\"col-8\">\r\n                                                        <Form.Control name=\"medication5\" onChange={props.onChange} placeholder=\"Medication\" />\r\n                                                    </Col>\r\n                                                    <Col className=\"col-4\">\r\n                                                        <Form.Control name=\"doseage5\" onChange={props.onChange} placeholder=\"Dosage (mg)\" />\r\n                                                    </Col>\r\n                                                </Form.Row>\r\n                                            </Form>\r\n                                            <Button className=\"meds-submit my-3\" name=\"medsButton\" onClick={props.onMedsClick} variant=\"primary\">Submit</Button>\r\n                                            {(props.medSuccess) ? <div className='dataEntrySuccess col-5 p-2 my-2 mx-auto text-center rounded'>Data recorded!</div> : null}\r\n                                            {(props.medError) ? <div className='dataEntryError col-5 p-2 my-2 mx-auto text-center rounded'>There was an issue submitting your data. Please try again later.</div> : null}\r\n                                            {(props.addDoseage) ? <div className='dataEntryError col-5 p-2 my-2 mx-auto text-center rounded'>Please add the doseage for your medication.</div> : null}\r\n                                        </Card.Body>\r\n                                        <Card>\r\n                                            <Card.Body>\r\n                                                <MedsDisplay username={props.username} />\r\n                                            </Card.Body>\r\n                                        </Card>\r\n                                        <Card.Footer className=\"entry-footer\"></Card.Footer>\r\n                                    </Card>\r\n                                </Col>\r\n                            </Row>\r\n                        </Tab>\r\n                        <Tab eventKey=\"general\" title=\"General\">\r\n                            <Row>\r\n                                <Col className=\"col-12 text-center card-container-entry\">\r\n                                    <Card className=\"text-center card-entry display-block\">\r\n                                        <Card.Header className=\"entry-header\">General Information</Card.Header>\r\n                                        <Card.Body>\r\n                                            <Form onSubmit={props.handleSubmit}>\r\n                                            <Row className='my-2'>\r\n                                                    <Col className='center'>\r\n                                                        <Form.Group className='center w-25' controlId=\"mrn\">\r\n                                                            <Form.Label>Medical Record Number</Form.Label>\r\n                                                            <Form.Control\r\n                                                                name=\"mrn\"\r\n                                                                onChange={props.onChange}\r\n                                                                placeholder=\"Medical Record Number\"\r\n                                                            />\r\n                                                        </Form.Group>\r\n                                                    </Col>\r\n                                                </Row>\r\n\r\n                                                <Row className='my-2'>\r\n                                                    <Col className='center'>\r\n                                                        <Form.Group className='center w-25' controlId='BirthDate'>\r\n                                                            <Form.Label>Date Of Birth</Form.Label>\r\n                                                            <Form.Control\r\n                                                            name='Birthdate'\r\n                                                            onChange={props.onChange}\r\n                                                            placeholder='MM/DD/YYYY'\r\n                                                            />\r\n                                                        </Form.Group>\r\n                                                    </Col>\r\n                                                </Row>\r\n                                                <Row className='mx-auto'>\r\n                                                    <Col className=\"col-6 mx-auto\">\r\n                                                        <p className=\"heightTitle mt-2\">Height</p>\r\n                                                        <Form.Group className='mx-2 center w-25' controlId=\"exampleForm.ControlSelect2\">\r\n                                                            <Form.Label>Feet</Form.Label>\r\n                                                            <Form.Control onChange={props.onChange} as=\"select\" name='feet'>\r\n                                                                <option value='2'>2</option>\r\n                                                                <option value='3'>3</option>\r\n                                                                <option value='4'>4</option>\r\n                                                                <option value='5'>5</option>\r\n                                                                <option value='6'>6</option>\r\n                                                                <option value='7'>7</option>\r\n                                                                <option value='8'>8</option>\r\n                                                            </Form.Control>\r\n                                                        </Form.Group>\r\n                                                        <Form.Group className=\"mx-2 center w-25\" controlId=\"exampleForm.ControlSelect2\">\r\n                                                            <Form.Label>Inches</Form.Label>\r\n                                                            <Form.Control onChange={props.onChange} as=\"select\" name='inches'>\r\n                                                                <option value='0'>0</option>\r\n                                                                <option value='1'>1</option>\r\n                                                                <option value='2'>2</option>\r\n                                                                <option value='3'>3</option>\r\n                                                                <option value='4'>4</option>\r\n                                                                <option value='5'>5</option>\r\n                                                                <option value='6'>6</option>\r\n                                                                <option value='7'>7</option>\r\n                                                                <option value='8'>8</option>\r\n                                                                <option value='9'>9</option>\r\n                                                                <option value='10'>10</option>\r\n                                                                <option value='11'>11</option>\r\n                                                            </Form.Control>\r\n                                                        </Form.Group>\r\n                                                    </Col>\r\n                                                </Row>\r\n                                                <Row className='my-2'>\r\n                                                    <Col className='center'>\r\n                                                        <Form.Group className='center w-25' controlId=\"weight\">\r\n                                                            <Form.Label>Weight</Form.Label>\r\n                                                            <Form.Control\r\n                                                                name=\"weight\"\r\n                                                                onChange={props.onChange}\r\n                                                                placeholder=\"Weight in lbs.\"\r\n                                                            />\r\n                                                        </Form.Group>\r\n                                                    </Col>\r\n                                                </Row>\r\n                                                <Row className='my-2'>\r\n                                                    <Col>\r\n                                                        <Form.Group className='w-25 center' controlId=\"ethnicity\">\r\n                                                            <Form.Label>Ethnicity</Form.Label>\r\n                                                            <Form.Control onChange={props.onChange} as=\"select\" name='ethnicity'>\r\n                                                                <option value='American Indian or Alaska Native'>American Indian or Alaska Native</option>\r\n                                                                <option value='Asian'>Asian</option>\r\n                                                                <option value='Black or African American'>Black or African American</option>\r\n                                                                <option value='Hispanic or Latino'>Hispanic or Latino</option>\r\n                                                                <option value='Native Hawaiian or Other Pacific Islander'>Native Hawaiian or Other Pacific Islander</option>\r\n                                                                <option value='White'>White</option>\r\n                                                            </Form.Control>\r\n                                                        </Form.Group>\r\n                                                    </Col>\r\n                                                </Row>\r\n                                                <Row className='my-2'>\r\n                                                    <Col className=\"mx-1\">\r\n                                                        <Form.Group className='w-25 center' controlId=\"disability\">\r\n                                                            <Form.Label>Disability</Form.Label>\r\n                                                            <Form.Control onChange={props.onChange} as=\"select\" name='disability'>\r\n                                                                <option value='DoNotWishToSay'>Do Not Wish to Say</option>\r\n                                                                <option value='Yes'>Yes</option>\r\n                                                                <option value='No'>No</option>\r\n                                                            </Form.Control>\r\n                                                        </Form.Group>\r\n                                                    </Col>\r\n                                                </Row>\r\n                                                <Row className='my-2'>\r\n                                                    <Col>\r\n                                                        <Form.Group className='w-25 center' controlId=\"tobaccoUse\">\r\n                                                            <Form.Label>Tobacco Use</Form.Label>\r\n                                                            <Form.Control onChange={props.onChange} as=\"select\" name='tobaccoUse'>\r\n                                                                <option value='DoNotWishToSay'>Do Not Wish to Say</option>\r\n                                                                <option value='Yes'>Yes</option>\r\n                                                                <option value='No'>No</option>\r\n                                                            </Form.Control>\r\n                                                        </Form.Group>\r\n                                                    </Col>\r\n                                                </Row>\r\n                                                <Row className='my-2'>\r\n                                                    <Col>\r\n                                                        <Form.Group className='w-25 center' controlId=\"tobaccoUse\">\r\n                                                            <Form.Label>Biological Sex</Form.Label>\r\n                                                            <Form.Control onChange={props.onChange} as=\"select\" name='sex'>\r\n                                                                <option value='DoNotWishToSay'>Do Not Wish to Say</option>\r\n                                                                <option value='Female'>Female</option>\r\n                                                                <option value='Male'>Male</option>\r\n                                                            </Form.Control>\r\n                                                        </Form.Group>\r\n                                                    </Col>\r\n                                                </Row>\r\n                                            </Form>\r\n                                            <Button className=\"general-submit my-4\" onClick={props.onGenClick} variant=\"primary\">Submit</Button>\r\n                                            {(props.genSuccess) ? <div className='dataEntrySuccess col-5 p-2 my-2 mx-auto text-center rounded'>Data recorded!</div> : null}\r\n                                            {(props.genError) ? <div className='dataEntryError col-5 p-2 my-2 mx-auto text-center rounded'>There was an issue submitting your data. Please try again later.</div> : null}\r\n                                        </Card.Body>\r\n                                        <Card.Footer className=\"entry-footer\"></Card.Footer>\r\n                                    </Card>\r\n                                </Col>\r\n                            </Row>\r\n                        </Tab>\r\n                    </Tabs>\r\n                </Col>\r\n            </Row>\r\n        </Container>\r\n    );\r\n\r\n}\r\n\r\nexport default EntryTabs;\r\n","import React, { Component } from 'react';\r\nimport Header from '../components/Header/Header';\r\nimport API from '../utils/API';\r\n// import axios from 'axios';\r\nimport EntryTabs from '../components/EntryTabs';\r\n\r\n// Importing sentiment lib\r\nimport Sentiment from 'sentiment';\r\n// import Reset from './ResetpasswordPage';\r\n\r\nclass DataEntry extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            username: '',\r\n            addDoseage: false,\r\n            bloodError: false,\r\n            moodError: false,\r\n            medError: false,\r\n            genError: false,\r\n            bloodSuccess: false,\r\n            moodSuccess: false,\r\n            medSuccess: false,\r\n            genSuccess: false,\r\n            journalEntry: '',\r\n            journalEntrySentiment: 0\r\n        };\r\n    }\r\n\r\n    // reset() {\r\n    //     this.setState({username: ''});\r\n    // }\r\n\r\n    componentDidMount() {\r\n        this.setState({\r\n            username: this.props.location.state\r\n        });\r\n        \r\n    }\r\n\r\n    handleInputChange = event => {\r\n        // Getting the value and name of the input which triggered the change\r\n        const { name, value } = event.target;\r\n        // Updating the input’s state\r\n        this.setState({\r\n            [name]: value,\r\n            addDoseage: false,\r\n            bloodSuccess: false,\r\n            moodSuccess: false,\r\n            medSuccess: false,\r\n            genSuccess: false\r\n        });\r\n        console.log(this.state);\r\n    };\r\n\r\n    // Event Handler to submit Blood data:\r\n    handleBloodSubmit = event => {\r\n        event.preventDefault();\r\n        const { username, heartRate, bloodSugar, systolicBloodPressure, diastolicBloodPressure } = this.state;\r\n        const data = {\r\n            username,\r\n            heartRate,\r\n            bloodSugar,\r\n            systolicBloodPressure,\r\n            diastolicBloodPressure\r\n        };\r\n        // Need to send this to mongoDB via method called addPatientData\r\n        API.submitBloodData({ data })\r\n            .then(data => {\r\n                if (data) {\r\n                    this.setState({\r\n                        bloodSuccess: true\r\n                    })\r\n                }\r\n            })\r\n            .catch(err => {\r\n                if (err) {\r\n                    this.setState({\r\n                        bloodError: true\r\n                    })\r\n                }\r\n            })\r\n    }\r\n\r\n    // calculateSentiment\r\n    calculateSentiment = (journalText) => {\r\n        let sentiment = new Sentiment();\r\n        let result = sentiment.analyze(journalText);\r\n        let percentageScore = Math.round(100*((result.comparative+3)/6));\r\n        this.setState({\r\n            journalEntrySentiment: percentageScore\r\n        })\r\n    }\r\n\r\n    // Event handler to detect Journal sentiment\r\n    handleMoodInputChange = event => {\r\n        // Getting the value and name of the input which triggered the change\r\n        const value = event.target.value\r\n        // Updating the input’s state\r\n        this.setState({\r\n            journalEntry: value,\r\n            moodSuccess: false\r\n        });\r\n        this.calculateSentiment(this.state.journalEntry);\r\n    };\r\n\r\n\r\n    // Event Handler to submit Mood data:\r\n    handleMoodSubmit = event => {\r\n        event.preventDefault();\r\n\r\n        //this.calculateSentiment(this.state.journalEntry);\r\n        const { username, journalEntry, journalEntrySentiment } = this.state;\r\n        // use await to wait for data to be loaded into state\r\n        const data = {\r\n            username,\r\n            journalEntry,\r\n            journalEntrySentiment\r\n        };\r\n    \r\n        API.submitMoodData({ data })\r\n            .then(data => {\r\n                if (data) {\r\n                    this.setState({\r\n                        moodSuccess: true\r\n                    })\r\n                }\r\n            })\r\n            .catch(err => {\r\n                if (err) {\r\n                    this.setState({\r\n                        moodError: true\r\n                    })\r\n                }\r\n        })\r\n    }\r\n\r\n    // Event Handler to submit Medication data:\r\n    handleMedsSubmit = event => {\r\n        event.preventDefault();\r\n        const medArray = [];\r\n        const doseArray = [];\r\n        if (this.state.medication1 && this.state.doseage1) {\r\n            medArray.push(this.state.medication1);\r\n            doseArray.push(this.state.doseage1);\r\n        } else if (this.state.medication1 && !this.state.doseage1) {\r\n            this.setState({\r\n                addDoseage: true\r\n            })\r\n        }\r\n        if (this.state.medication2 && this.state.doseage2) {\r\n            medArray.push(this.state.medication2);\r\n            doseArray.push(this.state.doseage2);\r\n        } else if (this.state.medication2 && !this.state.doseage2) {\r\n            this.setState({\r\n                addDoseage: true\r\n            })\r\n        }\r\n        if (this.state.medication3 && this.state.doseage3) {\r\n            medArray.push(this.state.medication3);\r\n            doseArray.push(this.state.doseage3);\r\n        } else if (this.state.medication3 && !this.state.doseage3) {\r\n            this.setState({\r\n                addDoseage: true\r\n            })\r\n        }\r\n        if (this.state.medication4 && this.state.doseage4) {\r\n            medArray.push(this.state.medication4);\r\n            doseArray.push(this.state.doseage4);\r\n        } else if (this.state.medication4 && !this.state.doseage4) {\r\n            this.setState({\r\n                addDoseage: true\r\n            })\r\n        }\r\n        if (this.state.medication5 && this.state.doseage5) {\r\n            medArray.push(this.state.medication5);\r\n            doseArray.push(this.state.doseage5);\r\n        } else if (this.state.medication5 && !this.state.doseage5) {\r\n            this.setState({\r\n                addDoseage: true\r\n            })\r\n        }\r\n        const data = {\r\n            username: this.state.username,\r\n            medications: medArray,\r\n            doseage: doseArray\r\n        };\r\n        if (!this.state.addDoseage) {\r\n            API.submitMedData({ data })\r\n                .then(data => {\r\n                    if (data) {\r\n                        this.setState({\r\n                            medSuccess: true\r\n                        })\r\n                    }\r\n                })\r\n                .catch(err => {\r\n                    if (err) {\r\n                        this.setState({\r\n                            medError: true\r\n                        })\r\n                    }\r\n                })\r\n        }\r\n    }\r\n\r\n    // Event handler to submit general data:\r\n    handleGeneralSubmit = event => {\r\n        event.preventDefault();\r\n        const { username, feet, inches, weight, ethnicity, disability, tobaccoUse, sex, mrn } = this.state;\r\n        const data = {\r\n            username,\r\n            height: [feet, inches],\r\n            weight,\r\n            ethnicity,\r\n            disability,\r\n            tobaccoUse,\r\n            sex,\r\n            mrn\r\n        };\r\n        API.submitGenData({ data })\r\n            .then(data => {\r\n                if (data) {\r\n                    this.setState({\r\n                        genSuccess: true\r\n                    })\r\n                }\r\n            })\r\n            .catch(err => {\r\n                if (err) {\r\n                    this.setState({\r\n                        genError: true\r\n                    })\r\n                }\r\n            })\r\n    }\r\n\r\n\r\n    render = () => {\r\n        const username = this.props.location.state;\r\n        return (\r\n            <>\r\n                <Header user={username} reset={this.reset}/>\r\n                <EntryTabs onChange={this.handleInputChange}\r\n                    onMoodChange={this.handleMoodInputChange}\r\n                    sentimentScore={this.state.journalEntrySentiment}\r\n                    onBloodClick={this.handleBloodSubmit}\r\n                    onMoodClick={this.handleMoodSubmit}\r\n                    onMedsClick={this.handleMedsSubmit}\r\n                    onGenClick={this.handleGeneralSubmit}\r\n                    bloodError={this.state.bloodError}\r\n                    moodError={this.state.moodError}\r\n                    medError={this.state.medError}\r\n                    genError={this.state.genError}\r\n                    addDoseage={this.state.addDoseage}\r\n                    bloodSuccess={this.state.bloodSuccess}\r\n                    moodSuccess={this.state.moodSuccess}\r\n                    medSuccess={this.state.medSuccess}\r\n                    genSuccess={this.state.genSuccess}\r\n                    username={username}\r\n                />\r\n            </>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default DataEntry;\r\n","import React from 'react'\r\n\r\nimport { Page,  Document, View,   StyleSheet, } from '@react-pdf/renderer';\r\n// Footer,\r\n// Text,\r\n// Title, Author, Subtitle,\r\n// BlobProvider,\r\n// Paragraph \r\n\r\nimport styled from '@react-pdf/styled-components'\r\nimport './PDFViewer.css'\r\nconst ViewPDF = (props) => {\r\n  const {\r\n    firstName,\r\n    lastName,\r\n    medications,\r\n    doseage,\r\n    heartRate,\r\n    bloodSugar,\r\n    systolicBloodPressure,\r\n    diastolicBloodPressure,\r\n    moodSentiment,\r\n    // data,\r\n    dateofBirth,\r\n    // ethnicity,\r\n    weight,\r\n    height,\r\n    address,\r\n    phoneNumber,\r\n    disability,\r\n    // tobaccoUse,\r\n    mrn\r\n  } = props.data;\r\n  let height1 = (height[0] * 12) + height[1];\r\n  let personalData = lastName + \", \" + firstName + \" DOB: \" + dateofBirth + \" MRN: \" + mrn;\r\n  let heart = \"Blood Pressure | Systolic: \" + systolicBloodPressure + \" mm Hg | Diastolic: \" + diastolicBloodPressure + \" mm Hg (View Chart 1) | Pulse: \" + heartRate + \" bpm (View Chart 2)\\n\"\r\n  let diabetic = \"Blood Glucose: \" + bloodSugar + \" mg/dL (View Chart 3) | Weight: \" + weight + \" lbs | BMI: \" + (weight * 703) / (height1 * height1) + \" (View Chart 4)\\n\"\r\n  const styles = StyleSheet.create({\r\n    page: { backgroundColor: 'white' },\r\n    section: { color: 'black', textAlign: 'center', margin: 30 },\r\n  });\r\n\r\n\r\n  const Heading = styled.Text`\r\n  margin: 10px;\r\n  font-size: 22px;\r\n  font-family: 'Helvetica';\r\n`;\r\n  const Author = styled.Text`\r\n  font-size: 24px;\r\n  text-align: center;\r\n  margin-bottom: 40px;\r\n`;\r\n  const Header = styled.Text`\r\n  color: grey;\r\n  font-size: 12px;\r\n  text-align: center;\r\n  margin-bottom: 20px;\r\n`;\r\n  const Paragraph = styled.Text`\r\n  margin: 12px;\r\n  font-size: 14px;\r\n  text-align: center;\r\n  font-family: 'Times-Roman';\r\n`;\r\n  const Subtitle = styled.Text`\r\n  font-weight: bold;\r\n  margin: 12px;\r\n  font-size: 12px;\r\n  font-family: 'Times-Roman';\r\n  text-align: center;\r\n`;\r\n\r\n//   const Footer = styled.Text`\r\n//   left: 0px;\r\n//   right: 0px;\r\n//   color: grey;\r\n//   bottom: 30px;\r\n//   font-size: 12px;\r\n//   position: absolute;\r\n//   text-align: center;\r\n// `;\r\n\r\n  return (\r\n    <Document title={`PatientFirst_${lastName}.pdf`} fileName={lastName}>\r\n      <Page style={styles.page}>\r\n        <View style={styles.section}>\r\n\r\n          <Header fixed>\r\n            Patient First\r\n            </Header>\r\n          <Heading>Medical Data</Heading>\r\n\r\n          <Author>{firstName} {lastName}</Author>\r\n          <Subtitle>{mrn}</Subtitle>\r\n          <Subtitle>{address}</Subtitle>\r\n          <Subtitle>{phoneNumber}</Subtitle>\r\n\r\n          <Author>{personalData}</Author>\r\n\r\n\r\n\r\n          <Paragraph>\r\n            {diabetic}\r\n          </Paragraph>\r\n          <Paragraph>\r\n            {heart}\r\n          </Paragraph>\r\n          <Subtitle>Medications</Subtitle>\r\n          <Paragraph>\r\n            {medications}, {doseage} mg/ml\r\n          </Paragraph>\r\n\r\n          <Subtitle>General Mood</Subtitle>\r\n          <Paragraph>\r\n            {moodSentiment}\r\n          </Paragraph>\r\n\r\n          <Subtitle>Identified Disability</Subtitle>\r\n          <Paragraph>\r\n            {disability}\r\n          </Paragraph>\r\n        </View>\r\n      </Page>\r\n    </Document>\r\n  )\r\n}\r\nexport default ViewPDF;","import React , { useState } from 'react';\r\nimport Container from 'react-bootstrap/Container';\r\nimport Form from 'react-bootstrap/Form';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\nimport Button from 'react-bootstrap/Button';\r\nimport './EmailForm.css';\r\nimport API from '../../utils/API';\r\n\r\nconst Email = (props) => {\r\n\r\n    const [emailInput, setEmailInput] = useState({'emailAddress': ''});\r\n    const getEmailInput = (event) => {\r\n        const { name, value } = event.target;\r\n        setEmailInput({'emailAddress': value});\r\n        console.log(emailInput);\r\n\r\n    }\r\n    \r\n    const sendEmailAddress = (event) => {\r\n        event.preventDefault();\r\n        API.sendEmail(emailInput)\r\n            .then(res => console.log(res))\r\n            .catch(err => console.log(err));\r\n    }\r\n\r\n    return (\r\n        <Container>\r\n            <Row>\r\n                <Col className=\"col-md-12 d-flex justify-content-center\">\r\n                    <Form.Group controlId=\"formBasicEmail\">\r\n                        <Form.Control onChange={(event) => getEmailInput(event)} type=\"email\" placeholder=\"Email address\" />\r\n                    </Form.Group>\r\n                    <Button onClick={(event) => sendEmailAddress(event)} className=\"emailSend\" type=\"submit\" variant=\"primary\">Send Email</Button>   \r\n                </Col>\r\n            </Row>\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default Email;","import React, { Component } from 'react';\r\nimport Header from '../components/Header/Header';\r\nimport { PDFViewer, PDFDownloadLink } from '@react-pdf/renderer';\r\nimport ViewPDF from '../components/createPDF'\r\nimport EmailForm from '../components/EmailForm';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\nimport API from '../utils/API';\r\nimport '../components/createPDF/PDFViewer.css';\r\n\r\nimport Button from 'react-bootstrap/Button'\r\n\r\n\r\n// import { LineChart, Chart } from 'react-chartkick'\r\n// import 'chart.js'\r\n\r\nclass SubmitToDoctor extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            username: '',\r\n            data: '',\r\n            loading: true,\r\n            error: '',\r\n            email: ''\r\n        }\r\n    }\r\n\r\n    // When this component is mounted to the DOM we want to load in the user data and set the state with it:\r\n    // Need username to make the call to the api, so how do we get the username?\r\n    async componentDidMount() {\r\n        this.setState({\r\n            username: this.props.location.state\r\n        });\r\n        const { username } = this.props.location.state;\r\n        console.log(username);\r\n        API.allPatientData({ username })\r\n            .then(res => {\r\n                this.setState({\r\n                    data: res.data,\r\n                    loading: false\r\n                })\r\n                console.log(res.data)\r\n            })\r\n            .catch(error => {\r\n                this.setState({\r\n                    data: '',\r\n                    loading: false,\r\n                    error: error.message\r\n                });\r\n            })\r\n    };\r\n\r\n    // Handle email form input change, pass as props\r\n    handleInputChange = event => {\r\n        // Getting the value and name of the input which triggered the change\r\n        const { value } = event.target;\r\n        // Updating the input’s state\r\n        this.setState({\r\n            email: value\r\n        });\r\n    };\r\n\r\n    // Handle submit of email\r\n    handleEmailSubmit = event => {\r\n        event.preventDefault();\r\n\r\n        API.sendEmail(\"http://localhost:3002/send\", this.state.email).then(console.log('email sent'))\r\n\r\n\r\n    }\r\n\r\n    render = () => {\r\n        if (this.state.data) {\r\n            return (\r\n                <>\r\n                    <Header user={this.state.username} />\r\n                    <div>\r\n                        <br></br>\r\n                        <br></br>\r\n                        <br></br>\r\n\r\n                        <Row>\r\n                            <Col className='col-md-12 text-center'>\r\n                                <Button type=\"submit\" variant=\"light\">\r\n                                    <PDFDownloadLink document={<ViewPDF data={this.state.data} />} fileName={`PatientFirst_${this.state.data.lastName}.pdf`}>\r\n                                        {({ loading }) => (loading ? 'Loading document...' : 'Download now!')}\r\n                                    </PDFDownloadLink>\r\n                                </Button>\r\n                            </Col>\r\n                        </Row>\r\n                        <Row>\r\n                            <Col className=\"col-md-12\">\r\n                                <EmailForm />\r\n                            </Col>\r\n                        </Row>\r\n                        <Row>\r\n                            <div className='col-md-12 viewer-column'>\r\n                                <PDFViewer id='PDFViewer'>\r\n                                    <ViewPDF data={this.state.data} />\r\n                                </PDFViewer>\r\n                            </div>\r\n                        </Row>\r\n                    </div>\r\n\r\n                </>\r\n            )\r\n        } else {\r\n            return (\r\n                <div>Loading data...</div>\r\n            )\r\n        }\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\nexport default SubmitToDoctor;\r\n","import React from 'react';\r\nimport { LineChart } from 'react-chartkick';\r\nimport 'chart.js';\r\n\r\n\r\nconst BloodPressureChart = props => {\r\n    \r\n    return (\r\n        <>\r\n            <h2 className='mx-auto'>Blood Pressure</h2>\r\n            <LineChart className='my-2' data={props.data} download={true}/>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default BloodPressureChart;","import React from 'react';\r\nimport { LineChart } from 'react-chartkick';\r\nimport 'chart.js'\r\n\r\nconst BloodSugarChart = props => {\r\n    return (\r\n        <>\r\n            <h2 className='mx-2' >{props.data[0].name}</h2>\r\n            <LineChart className='p-2' data={props.data} download={true}/>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default BloodSugarChart;","import React from 'react';\r\nimport { LineChart } from 'react-chartkick';\r\nimport 'chart.js'\r\n\r\nconst HeartRateChart = props => {\r\n    return (\r\n        <>\r\n            <h2 className='mx-auto' >{props.data[0].name}</h2>\r\n            <LineChart className='p-2' data={props.data} download={true}/>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default HeartRateChart;","import React from 'react';\r\nimport { LineChart } from 'react-chartkick';\r\nimport 'chart.js'\r\n\r\nconst SentimentChart = props => {\r\n    return (\r\n        <>\r\n            <h2 className='mx-auto'>Mood</h2>\r\n            <LineChart className='p-2' data={props.data} download={true}/>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default SentimentChart;","import React, { useState } from 'react';\r\nimport Container from 'react-bootstrap/Container';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\nimport Tabs from 'react-bootstrap/Tabs';\r\nimport Tab from 'react-bootstrap/Tab';\r\nimport Card from 'react-bootstrap/Card';\r\nimport Table from 'react-bootstrap/Table';\r\nimport Accordion from 'react-bootstrap/Accordion';\r\nimport ListGroup from 'react-bootstrap/ListGroup';\r\nimport ListGroupItem from 'react-bootstrap/ListGroupItem';\r\n//Import Charts:\r\nimport BloodPressureChart from '../Charts/BloodPressureChart';\r\nimport BloodSugarChart from '../Charts/BloodSugarChart';\r\nimport HeartRateChart from '../Charts/HeartRateChart';\r\nimport SentimentChart from '../Charts/SentimentChart';\r\n//import CSS\r\nimport './ViewTabs.css';\r\n\r\n\r\nconst makeNewObj = (k, v) => {\r\n    let newObj = {};\r\n    let key = '';\r\n    let value = '';\r\n    for (let i = 0; i < k.length; i++) {\r\n        key = k[i]\r\n        value = v[i]\r\n        newObj[key] = value;\r\n    }\r\n    return newObj;\r\n}\r\n\r\n// const checkStats = event => {console.log(event.target)};\r\n\r\nconst ViewTabs = (props) => {\r\n    const [key, setKey] = useState('graphs');\r\n    const { firstName,\r\n        middleName,\r\n        lastName,\r\n        dateofBirth,\r\n        medications,\r\n        doseage,\r\n        // medsTimeStamp,\r\n        heartRate,\r\n        bloodSugar,\r\n        systolicBloodPressure,\r\n        diastolicBloodPressure,\r\n        bloodTimeStamp,\r\n        journalEntrySentiment,\r\n        journalEntry,\r\n        moodTimeStamp,\r\n        ethnicity,\r\n        weight,\r\n        height,\r\n        sex,\r\n        disability,\r\n        tobaccoUse,\r\n        mrn\r\n    } = props.data;\r\n\r\n    //--- Create data for the graphs: ---\r\n    let heartRateData = makeNewObj(bloodTimeStamp, heartRate);\r\n    let bloodSugarData = makeNewObj(bloodTimeStamp, bloodSugar);\r\n    let systolicBloodPressureData = makeNewObj(bloodTimeStamp, systolicBloodPressure);\r\n    let diastolicBloodPressureData = makeNewObj(bloodTimeStamp, diastolicBloodPressure);\r\n    let journalEntrySentimentData = makeNewObj(moodTimeStamp, journalEntrySentiment);\r\n\r\n    let bloodPressureGraph = [\r\n        { name: 'Systolic Blood Pressure', data: { ...systolicBloodPressureData } },\r\n        { name: 'Diastolic Blood Pressure', data: { ...diastolicBloodPressureData } }\r\n    ]\r\n\r\n    let bloodSugarGraph = [\r\n        { name: 'Blood Sugar', data: { ...bloodSugarData } }\r\n    ]\r\n\r\n    let heartRateGraph = [\r\n        { name: 'Heart Rate', data: { ...heartRateData } }\r\n    ]\r\n\r\n    let sentimentGraph = [\r\n        { name: 'Sentiment', data: { ...journalEntrySentimentData } }\r\n    ]\r\n\r\n    //--- Create an object for the medications:\r\n    const medList = makeNewObj(medications, doseage);\r\n\r\n    //--- Reverse the order of the mood time stamps and journal entry arrays\r\n    //--- Will display the most recent journal entries at the top\r\n    const sortedMoodTimeStamp = moodTimeStamp.reverse();\r\n    const sortedJournalEntry = journalEntry.reverse();\r\n\r\n    //--- Create an object for the journal entries:\r\n    const journalList = makeNewObj(sortedMoodTimeStamp, sortedJournalEntry);\r\n    console.log(journalList);\r\n\r\n    //--- Render the page:\r\n    return (\r\n        <Container className='View-Tab-Container'>\r\n            <Row>\r\n                <Col className='view-tab-content'>\r\n                    <Tabs className=\"text-center\" id=\"controlled-tab-example\" activeKey={key} onSelect={k => setKey(k)}>\r\n                        <Tab eventKey='graphs' title='Trend Charts'>\r\n                            <Card className=\"chart-card\">\r\n                                <Card.Body className=\"chart-card-body\">\r\n                                    <BloodPressureChart data={bloodPressureGraph} />\r\n                                    <BloodSugarChart data={bloodSugarGraph} />\r\n                                    <HeartRateChart data={heartRateGraph} />\r\n                                    <SentimentChart data={sentimentGraph} />\r\n                                </Card.Body>\r\n                            </Card>\r\n                        </Tab>\r\n                        <Tab eventKey='journalEntries' title=\"Journal Entries\">\r\n                            <Card>\r\n                                <Card.Body>\r\n                                    <Row>\r\n                                        <Col className=\"col-md-12\">\r\n                                            <Accordion defaultActiveKey=\"0\">\r\n                                                {Object.entries(journalList).map(elem => (\r\n                                                    <Card className=\"card-accordian-container\">\r\n                                                        <Accordion.Toggle className='text-center accordian-header' as={Card.Header} eventKey={elem[0]}>\r\n                                                            {elem[0].slice(0, 10)}\r\n                                                        </Accordion.Toggle>\r\n                                                        <Accordion.Collapse eventKey={elem[0]}>\r\n                                                            <Card.Body className=\"journal-entry-bd\">{`\"${elem[1]}\"`}</Card.Body>\r\n                                                        </Accordion.Collapse>\r\n                                                    </Card>\r\n                                                )\r\n                                                )}\r\n                                            </Accordion>\r\n                                        </Col>\r\n                                    </Row>\r\n                                </Card.Body>\r\n                            </Card>\r\n                        </Tab>\r\n                        <Tab eventKey='meds' title='Medications'>\r\n                            <Card>\r\n                                <Card.Body>\r\n                                    <Row>\r\n                                        <Table striped bordered hover size=\"sm\">\r\n                                            <thead>\r\n                                                <tr>\r\n                                                    <th>Medication</th>\r\n                                                    <th>Doseage</th>\r\n                                                </tr>\r\n                                            </thead>\r\n                                            <tbody>\r\n                                                {Object.entries(medList).map(elem => (\r\n                                                    <tr id={`medications-${elem[0]}`}>\r\n                                                        <td key={elem[0]}>{elem[0]}</td>\r\n                                                        <td key={elem[1]}>{elem[1]}</td>\r\n                                                    </tr>\r\n                                                ))}\r\n                                            </tbody>\r\n                                        </Table>\r\n                                    </Row>\r\n                                </Card.Body>\r\n                            </Card>\r\n                        </Tab>\r\n                        <Tab eventKey='generalinfo' title='General'>\r\n                            <Card>\r\n                                <Card.Body>\r\n                                    <Row>\r\n                                        <Col>\r\n                                            <Card>\r\n                                                <Card.Header as='h1' className='text-center my-2'>General Information</Card.Header>\r\n                                                <Card.Body>\r\n                                                    <ListGroup className=\"list-group-flush\">\r\n                                                        <ListGroupItem> {firstName} {middleName} {lastName} </ListGroupItem>\r\n                                                        <ListGroupItem>DOB: {dateofBirth}</ListGroupItem>\r\n                                                        <ListGroupItem>Medical Record Number: {mrn}</ListGroupItem>\r\n                                                        <ListGroupItem>Ethnicity: {ethnicity}</ListGroupItem>\r\n                                                        <ListGroupItem>Sex: {sex}</ListGroupItem>\r\n                                                        <ListGroupItem>Height: {height[0]} feet {height[1]} inches</ListGroupItem>\r\n                                                        <ListGroupItem>Weight: {weight}</ListGroupItem>\r\n                                                        <ListGroupItem>Disability: {disability}</ListGroupItem>\r\n                                                        <ListGroupItem>Tobacco Use: {tobaccoUse}</ListGroupItem>\r\n                                                    </ListGroup>\r\n                                                </Card.Body>\r\n                                            </Card>\r\n                                        </Col>\r\n                                    </Row>\r\n                                </Card.Body>\r\n                            </Card>\r\n                        </Tab>\r\n                    </Tabs>\r\n                </Col>\r\n            </Row>\r\n        </Container>\r\n        \r\n    );\r\n\r\n};\r\n\r\nexport default ViewTabs;","import React, { Component } from \"react\";\r\nimport API from \"../utils/API\";\r\nimport Header from '../components/Header/Header';\r\nimport ViewTabs from '../components/ViewTabs/ViewTabs';\r\n// import '../components/dataManipulater/index';\r\nclass ViewData extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            username: '',\r\n            data: '',\r\n            loading: true,\r\n            error: '',\r\n        }\r\n    }\r\n\r\n    // When this component is mounted to the DOM we want to load in the user data and set the state with it:\r\n    // Need username to make the call to the api, so how do we get the username?\r\n    async componentDidMount() {\r\n        this.setState({\r\n            username: this.props.location.state\r\n        });\r\n        const { username } = this.props.location.state;\r\n        API.allPatientData({ username })\r\n            .then(res => {\r\n                this.setState({\r\n                    data: res.data,\r\n                    loading: false\r\n                })\r\n            })\r\n            .catch(error => {\r\n                console.log(\"this is the error\" + error)\r\n                this.setState({\r\n                    data: '',\r\n                    loading: false,\r\n                    error: error.message\r\n                });\r\n            })\r\n    };\r\n\r\n\r\n    render = () => {\r\n        return (\r\n            <>\r\n                <Header user={this.state.username} />\r\n                {(this.state.loading || this.state.error) && <div>{this.state.loading ? 'Loading...' : this.state.error}</div>}\r\n                {(!this.state.loading && !this.state.error) ? <ViewTabs data={this.state.data} /> : null}\r\n            </>\r\n        )\r\n    }\r\n\r\n}\r\n\r\n\r\n\r\nexport default ViewData;\r\n","import React from 'react';\r\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\r\n// import Jumbotron from '../src/components/Jumbotron';\r\n// Import Our Pages here\r\n\r\nimport LoginPage from './pages/LoginPage';\r\nimport SignUp from './pages/SignUp';\r\nimport ResetpasswordPage from './pages/ResetpasswordPage';\r\nimport LandingPage from './pages/LandingPage';\r\nimport DataEntryPage from './pages/DataEntryPage';\r\nimport SubmitPage from './pages/SubmitPage'\r\nimport ViewData from './pages/ViewData';\r\n//import Page from '../src/components/PDF/src/Pages/Page'\r\n\r\n// Default CSS\r\nimport './App.css';\r\n\r\nfunction App() {\r\n  return (\r\n    <Router>\r\n      <div>\r\n        <Switch>\r\n          <Route exact path=\"/\" component={LoginPage} />\r\n          <Route exact path=\"/Landing\" component={LandingPage} />\r\n          <Route exact path=\"/DataEntry\" component={DataEntryPage} />\r\n          <Route exact path=\"/Signup\" component={SignUp} />\r\n          <Route exact path=\"/Resetpassword\" component={ResetpasswordPage} />\r\n          <Route exact path='/viewData' component={ViewData} />\r\n          <Route exact path='/submit' component={SubmitPage} />\r\n        </Switch>\r\n      </div>\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}